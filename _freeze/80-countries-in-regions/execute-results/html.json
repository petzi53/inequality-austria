{
  "hash": "beaa8b181e05c103f2dc193e9418a33a",
  "result": {
    "engine": "knitr",
    "markdown": "# Regions and their Countries {#sec-countries-in-regions}\n\n\n\n\n\n\n\n\n\n\n## Table of content {.unnumbered}\n\n::::: {#obj-chapter-template}\n:::: {.my-objectives}\n::: {.my-objectives-header}\nList regions of the WIR2022 and their countries\n:::\n\n::: {.my-objectives-container}\n\nThe World Inequality Report 2022 (WIR2022) describes global trends in inequality. It mostly condense data in eight different regions. See the following graph as an example:\n\n![A typical example for a graph in the World Inequality Report 2022 (WIR2022), showing the division of the world into eight different world regions (\"MENA\" stands for Middle East & North Arfica).](img/80-WIR2022-min.png){#fig-80-wir2022-example \nfig-alt=\"The image shows the income shares for the bottom 50%, middle 40% and top 10% in 2021 dividing the world into eight different regions. With the exception of Europe the top 10% earn the biggest share of the income with the following order from lowest to the highest 10%: Europe, East Asia, North America, Russia & Central Asia, South & South-East Asia, Latin America, Sub-Saharan Africa, MENA (Middle East & North Africa). Example: In Latin America the top 10% captures 55% of national income compared to 36% of Europe.\" fig-align=\"center\" \nwidth=\"100%\"}\n\n\nIn this appendix I want to know the countries that form each of these eight regions. \n\n:::\n::::\n:::::\n\n## Data\n\nMy first task was to look for data where I could extract the information I am interested in. I scanned the files of the free accessible [GitHub repository of the WID](https://github.com/WIDworld/wid-world). I found `country-codes-core.xlsx`, an Excel file with the data I am looking for. It is sorted by a two letter code in the first column named appropriately `code`. \"Core\" means -- in contrast to [other `country-codes` files](https://github.com/WIDworld/wid-world/tree/master/data-input/country-codes) -- that it includes a column `corecountry` where the number `1` functions as a marker for a core country. The file itself has many hidden rows which feature either regions smaller than a country (like Alabama for US or Bavaria for Germany) or bigger than a country (like Asia or Western Europe).\n\n::: {.callout-important}\n`country-codes-core.xlsx` contains many hidden rows. It is therefore necessary to filter by `corecountry == 1`.\n:::\n\n\n### Download data\n\nThe following code chunk is only applied once. It downloads the dataset, selects only the core countries and stores the file as `country-code.RDS`\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-download-country-codes-core}\n: Download the country-codes-core file, manipulate and save it\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## run this code chunk only once (manually)\n\n## define variables\nurl <- \"https://github.com/WIDworld/wid-world/raw/master/data-input/country-codes/country-codes-core.xlsx\"\nchapter_folder = \"chap80\"\n\n## create folder for chapter if not already done\nchap_folder <-\n        base::paste0(\n            here::here(),\n            paste0(\"/data/\", chapter_folder, \"/\")\n        )\n    if (!base::file.exists(chap_folder))\n    {base::dir.create(chap_folder)}\n\n## get country-codes-core.xlsx\ndestfile <- base::paste0(chap_folder, \"country-codes-core.xlsx\")\nutils::download.file(url, destfile)\ntmp <- readxl::read_xlsx(destfile)\n\n\ncountry_codes <- tmp |> \n    ## filter for core countries\n    dplyr::filter(corecountry == 1) |> \n    ## convert all region columns to factor variables\n    dplyr::mutate(dplyr::across(\n        tidyselect::starts_with(\"region\"), forcats::as_factor)\n        )\n\n## save cleaned data\npb_save_data_file(\"chap80\", country_codes, \"country_codes.rds\")\n```\n:::\n\n\n\n\n\n(*For this R code chunk is no output available*)\n\n::::\n:::::\n\n### Eplore Data\n\nAn inspection of the data file shows that column `region5` contains the regions used in WIR2022.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-explore-data}\n: Explore Data\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountry_codes <- base::readRDS(\"data/chap80/country_codes.rds\")\n\nskimr::skim(country_codes)\n\nglue::glue(\" \")\nglue::glue(\"############################################################\")\nglue::glue(\"Display number of countries for each region\")\nglue::glue(\"############################################################\")\nglue::glue(\" \")\ncountry_codes |> \n    dplyr::pull(region5) |> \n    forcats::fct_count()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |              |\n|:------------------------|:-------------|\n|Name                     |country_codes |\n|Number of rows           |216           |\n|Number of columns        |10            |\n|_______________________  |              |\n|Column type frequency:   |              |\n|character                |3             |\n|factor                   |5             |\n|numeric                  |2             |\n|________________________ |              |\n|Group variables          |None          |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|code          |         0|             1|   2|   2|     0|      216|          0|\n|titlename     |         0|             1|   4|  32|     0|      216|          0|\n|shortname     |         0|             1|   3|  32|     0|      216|          0|\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                         |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------------------------|\n|region1       |         0|          1.00|FALSE   |        5|Afr: 54, Asi: 53, Ame: 47, Eur: 46 |\n|region2       |         0|          1.00|FALSE   |       18|Wes: 27, Car: 23, Wes: 20, Eas: 19 |\n|region3       |       184|          0.15|FALSE   |        1|Eur: 32                            |\n|region4       |        24|          0.89|FALSE   |        9|Oth: 48, Oth: 38, Oth: 22, Oth: 18 |\n|region5       |         0|          1.00|FALSE   |        8|Sub: 49, Eur: 46, Lat: 43, MEN: 20 |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate| mean|   sd| p0| p25| p50| p75| p100|hist  |\n|:-------------|---------:|-------------:|----:|----:|--:|---:|---:|---:|----:|:-----|\n|corecountry   |         0|             1| 1.00| 0.00|  1|   1|   1|   1|    1|▁▁▇▁▁ |\n|TH            |         0|             1| 0.19| 0.39|  0|   0|   0|   0|    1|▇▁▁▁▂ |\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#>  \n#> ############################################################\n#> Display number of countries for each region\n#> ############################################################\n#>  \n#> # A tibble: 8 × 2\n#>   f                           n\n#>   <fct>                   <int>\n#> 1 Europe                     46\n#> 2 MENA                       20\n#> 3 South & South-East Asia    20\n#> 4 Latin America              43\n#> 5 Russia & Central Asia      11\n#> 6 Sub-Saharan Africa         49\n#> 7 North America & Oceania    19\n#> 8 East Asia                   8\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n## List countries\n\n:::::{.my-example}\n:::{.my-example-header}\n:::::: {#exm-80-list-countries}\n: List countries for each regions used in WIR2022\n::::::\n:::\n::::{.my-example-container}\n\n::: {.panel-tabset}\n\n###### Europe\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-europe}\n: Countries of the European region used in the WIR2022\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes <- country_codes |> \n    dplyr::select(code, shortname, region5)\n\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Europe\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 46 × 3\n#>    code  shortname              region5\n#>    <chr> <chr>                  <fct>  \n#>  1 AD    Andorra                Europe \n#>  2 AL    Albania                Europe \n#>  3 AT    Austria                Europe \n#>  4 BA    Bosnia and Herzegovina Europe \n#>  5 BE    Belgium                Europe \n#>  6 BG    Bulgaria               Europe \n#>  7 CH    Switzerland            Europe \n#>  8 CY    Cyprus                 Europe \n#>  9 CZ    Czech Republic         Europe \n#> 10 DE    Germany                Europe \n#> 11 DK    Denmark                Europe \n#> 12 EE    Estonia                Europe \n#> 13 ES    Spain                  Europe \n#> 14 FI    Finland                Europe \n#> 15 FR    France                 Europe \n#> 16 GB    United Kingdom         Europe \n#> 17 GG    Guernsey               Europe \n#> 18 GI    Gibraltar              Europe \n#> 19 GR    Greece                 Europe \n#> 20 HR    Croatia                Europe \n#> 21 HU    Hungary                Europe \n#> 22 IE    Ireland                Europe \n#> 23 IM    Isle of Man            Europe \n#> 24 IS    Iceland                Europe \n#> 25 IT    Italy                  Europe \n#> 26 JE    Jersey                 Europe \n#> 27 KS    Kosovo                 Europe \n#> 28 LI    Liechtenstein          Europe \n#> 29 LT    Lithuania              Europe \n#> 30 LU    Luxembourg             Europe \n#> 31 LV    Latvia                 Europe \n#> 32 MC    Monaco                 Europe \n#> 33 MD    Moldova                Europe \n#> 34 ME    Montenegro             Europe \n#> 35 MK    North Macedonia        Europe \n#> 36 MT    Malta                  Europe \n#> 37 NL    Netherlands            Europe \n#> 38 NO    Norway                 Europe \n#> 39 PL    Poland                 Europe \n#> 40 PT    Portugal               Europe \n#> 41 RO    Romania                Europe \n#> 42 RS    Serbia                 Europe \n#> 43 SE    Sweden                 Europe \n#> 44 SI    Slovenia               Europe \n#> 45 SK    Slovakia               Europe \n#> 46 SM    San Marino             Europe\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n\n###### MENA\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-mena}\n: Countries of the MENA region (Middle East & North Afrika)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"MENA\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 20 × 3\n#>    code  shortname            region5\n#>    <chr> <chr>                <fct>  \n#>  1 AE    United Arab Emirates MENA   \n#>  2 BH    Bahrain              MENA   \n#>  3 DZ    Algeria              MENA   \n#>  4 EG    Egypt                MENA   \n#>  5 IL    Israel               MENA   \n#>  6 IQ    Iraq                 MENA   \n#>  7 IR    Iran                 MENA   \n#>  8 JO    Jordan               MENA   \n#>  9 KW    Kuwait               MENA   \n#> 10 LB    Lebanon              MENA   \n#> 11 LY    Libya                MENA   \n#> 12 MA    Morocco              MENA   \n#> 13 OM    Oman                 MENA   \n#> 14 PS    Palestine            MENA   \n#> 15 QA    Qatar                MENA   \n#> 16 SA    Saudi Arabia         MENA   \n#> 17 SY    Syrian Arab Republic MENA   \n#> 18 TN    Tunisia              MENA   \n#> 19 TR    Turkey               MENA   \n#> 20 YE    Yemen                MENA\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n###### South & South-East Asia\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-ssea}\n: Countries of the South & South-East Asia region used in the WIR2022\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"South & South-East Asia\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 20 × 3\n#>    code  shortname         region5                \n#>    <chr> <chr>             <fct>                  \n#>  1 AF    Afghanistan       South & South-East Asia\n#>  2 BD    Bangladesh        South & South-East Asia\n#>  3 BN    Brunei Darussalam South & South-East Asia\n#>  4 BT    Bhutan            South & South-East Asia\n#>  5 ID    Indonesia         South & South-East Asia\n#>  6 IN    India             South & South-East Asia\n#>  7 KH    Cambodia          South & South-East Asia\n#>  8 LA    Lao PDR           South & South-East Asia\n#>  9 LK    Sri Lanka         South & South-East Asia\n#> 10 MM    Myanmar           South & South-East Asia\n#> 11 MV    Maldives          South & South-East Asia\n#> 12 MY    Malaysia          South & South-East Asia\n#> 13 NP    Nepal             South & South-East Asia\n#> 14 PG    Papua New Guinea  South & South-East Asia\n#> 15 PH    Philippines       South & South-East Asia\n#> 16 PK    Pakistan          South & South-East Asia\n#> 17 SG    Singapore         South & South-East Asia\n#> 18 TH    Thailand          South & South-East Asia\n#> 19 TL    Timor-Leste       South & South-East Asia\n#> 20 VN    Viet Nam          South & South-East Asia\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n###### Latin America\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-latin-america}\n: Countries of the Latin America region used in the WIR2022\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Latin America\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 43 × 3\n#>    code  shortname                        region5      \n#>    <chr> <chr>                            <fct>        \n#>  1 AG    Antigua and Barbuda              Latin America\n#>  2 AI    Anguilla                         Latin America\n#>  3 AR    Argentina                        Latin America\n#>  4 AW    Aruba                            Latin America\n#>  5 BB    Barbados                         Latin America\n#>  6 BO    Bolivia                          Latin America\n#>  7 BQ    Bonaire, Sint Eustatius and Saba Latin America\n#>  8 BR    Brazil                           Latin America\n#>  9 BS    Bahamas                          Latin America\n#> 10 BZ    Belize                           Latin America\n#> 11 CL    Chile                            Latin America\n#> 12 CO    Colombia                         Latin America\n#> 13 CR    Costa Rica                       Latin America\n#> 14 CU    Cuba                             Latin America\n#> 15 CW    Curacao                          Latin America\n#> 16 DM    Dominica                         Latin America\n#> 17 DO    Dominican Republic               Latin America\n#> 18 EC    Ecuador                          Latin America\n#> 19 GD    Grenada                          Latin America\n#> 20 GT    Guatemala                        Latin America\n#> 21 GY    Guyana                           Latin America\n#> 22 HN    Honduras                         Latin America\n#> 23 HT    Haiti                            Latin America\n#> 24 JM    Jamaica                          Latin America\n#> 25 KN    Saint Kitts and Nevis            Latin America\n#> 26 KY    Cayman Islands                   Latin America\n#> 27 LC    Saint Lucia                      Latin America\n#> 28 MS    Montserrat                       Latin America\n#> 29 MX    Mexico                           Latin America\n#> 30 NI    Nicaragua                        Latin America\n#> 31 PA    Panama                           Latin America\n#> 32 PE    Peru                             Latin America\n#> 33 PR    Puerto Rico                      Latin America\n#> 34 PY    Paraguay                         Latin America\n#> 35 SR    Suriname                         Latin America\n#> 36 SV    El Salvador                      Latin America\n#> 37 SX    Sint Maarten (Dutch part)        Latin America\n#> 38 TC    Turks and Caicos Islands         Latin America\n#> 39 TT    Trinidad and Tobago              Latin America\n#> 40 UY    Uruguay                          Latin America\n#> 41 VC    Saint Vincent and the Grenadines Latin America\n#> 42 VE    Venezuela                        Latin America\n#> 43 VG    Virgin Islands, British          Latin America\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n###### Russia & Central Asia\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-ruca}\n: Countries of the Russia & Central Asia region used in the WIR2022\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Russia & Central Asia\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 11 × 3\n#>    code  shortname          region5              \n#>    <chr> <chr>              <fct>                \n#>  1 AM    Armenia            Russia & Central Asia\n#>  2 AZ    Azerbaijan         Russia & Central Asia\n#>  3 BY    Belarus            Russia & Central Asia\n#>  4 GE    Georgia            Russia & Central Asia\n#>  5 KG    Kyrgyzstan         Russia & Central Asia\n#>  6 KZ    Kazakhstan         Russia & Central Asia\n#>  7 RU    Russian Federation Russia & Central Asia\n#>  8 TJ    Tajikistan         Russia & Central Asia\n#>  9 TM    Turkmenistan       Russia & Central Asia\n#> 10 UA    Ukraine            Russia & Central Asia\n#> 11 UZ    Uzbekistan         Russia & Central Asia\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n###### Sub-Saharan Africa\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-susa}\n: Countries of the Sub-Saharan African region used in the WIR2022\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"Sub-Saharan Africa\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 49 × 3\n#>    code  shortname                region5           \n#>    <chr> <chr>                    <fct>             \n#>  1 AO    Angola                   Sub-Saharan Africa\n#>  2 BF    Burkina Faso             Sub-Saharan Africa\n#>  3 BI    Burundi                  Sub-Saharan Africa\n#>  4 BJ    Benin                    Sub-Saharan Africa\n#>  5 BW    Botswana                 Sub-Saharan Africa\n#>  6 CD    DR Congo                 Sub-Saharan Africa\n#>  7 CF    Central African Republic Sub-Saharan Africa\n#>  8 CG    Congo                    Sub-Saharan Africa\n#>  9 CI    Cote d'Ivoire            Sub-Saharan Africa\n#> 10 CM    Cameroon                 Sub-Saharan Africa\n#> 11 CV    Cabo Verde               Sub-Saharan Africa\n#> 12 DJ    Djibouti                 Sub-Saharan Africa\n#> 13 ER    Eritrea                  Sub-Saharan Africa\n#> 14 ET    Ethiopia                 Sub-Saharan Africa\n#> 15 GA    Gabon                    Sub-Saharan Africa\n#> 16 GH    Ghana                    Sub-Saharan Africa\n#> 17 GM    Gambia                   Sub-Saharan Africa\n#> 18 GN    Guinea                   Sub-Saharan Africa\n#> 19 GQ    Equatorial Guinea        Sub-Saharan Africa\n#> 20 GW    Guinea-Bissau            Sub-Saharan Africa\n#> 21 KE    Kenya                    Sub-Saharan Africa\n#> 22 KM    Comoros                  Sub-Saharan Africa\n#> 23 LR    Liberia                  Sub-Saharan Africa\n#> 24 LS    Lesotho                  Sub-Saharan Africa\n#> 25 MG    Madagascar               Sub-Saharan Africa\n#> 26 ML    Mali                     Sub-Saharan Africa\n#> 27 MR    Mauritania               Sub-Saharan Africa\n#> 28 MU    Mauritius                Sub-Saharan Africa\n#> 29 MW    Malawi                   Sub-Saharan Africa\n#> 30 MZ    Mozambique               Sub-Saharan Africa\n#> 31 NA    Namibia                  Sub-Saharan Africa\n#> 32 NE    Niger                    Sub-Saharan Africa\n#> 33 NG    Nigeria                  Sub-Saharan Africa\n#> 34 RW    Rwanda                   Sub-Saharan Africa\n#> 35 SC    Seychelles               Sub-Saharan Africa\n#> 36 SD    Sudan                    Sub-Saharan Africa\n#> 37 SL    Sierra Leone             Sub-Saharan Africa\n#> 38 SN    Senegal                  Sub-Saharan Africa\n#> 39 SO    Somalia                  Sub-Saharan Africa\n#> 40 SS    South Sudan              Sub-Saharan Africa\n#> 41 ST    Sao Tome and Principe    Sub-Saharan Africa\n#> 42 SZ    Swaziland                Sub-Saharan Africa\n#> 43 TD    Chad                     Sub-Saharan Africa\n#> 44 TG    Togo                     Sub-Saharan Africa\n#> 45 TZ    Tanzania                 Sub-Saharan Africa\n#> 46 UG    Uganda                   Sub-Saharan Africa\n#> 47 ZA    South Africa             Sub-Saharan Africa\n#> 48 ZM    Zambia                   Sub-Saharan Africa\n#> 49 ZW    Zimbabwe                 Sub-Saharan Africa\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n###### North America & Oceania\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-noac}\n: Countries of the North America & Oceania region used in the WIR2022\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"North America & Oceania\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 19 × 3\n#>    code  shortname        region5                \n#>    <chr> <chr>            <fct>                  \n#>  1 AU    Australia        North America & Oceania\n#>  2 BM    Bermuda          North America & Oceania\n#>  3 CA    Canada           North America & Oceania\n#>  4 FJ    Fiji             North America & Oceania\n#>  5 FM    Micronesia       North America & Oceania\n#>  6 GL    Greenland        North America & Oceania\n#>  7 KI    Kiribati         North America & Oceania\n#>  8 MH    Marshall Islands North America & Oceania\n#>  9 NC    New Caledonia    North America & Oceania\n#> 10 NR    Nauru            North America & Oceania\n#> 11 NZ    New Zealand      North America & Oceania\n#> 12 PF    French Polynesia North America & Oceania\n#> 13 PW    Palau            North America & Oceania\n#> 14 SB    Solomon Islands  North America & Oceania\n#> 15 TO    Tonga            North America & Oceania\n#> 16 TV    Tuvalu           North America & Oceania\n#> 17 US    USA              North America & Oceania\n#> 18 VU    Vanuatu          North America & Oceania\n#> 19 WS    Samoa            North America & Oceania\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n###### East Asia\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-80-east-asia}\n: Countries of the East Asia region used in the WIR2022\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwir2022_country_codes |> \n    dplyr::filter(region5 == \"East Asia\") |> \n    print(n = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 8 × 3\n#>   code  shortname   region5  \n#>   <chr> <chr>       <fct>    \n#> 1 CN    China       East Asia\n#> 2 HK    Hong Kong   East Asia\n#> 3 JP    Japan       East Asia\n#> 4 KP    North Korea East Asia\n#> 5 KR    Korea       East Asia\n#> 6 MN    Mongolia    East Asia\n#> 7 MO    Macao       East Asia\n#> 8 TW    Taiwan      East Asia\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n***\n\n",
    "supporting": [
      "80-countries-in-regions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}